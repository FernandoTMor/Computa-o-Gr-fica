# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QxoCbG21QAc_vyWuUIVgn3XEV4KuiXvc
"""

import math

# Função para calcular o tamanho (magnitude) de um vetor
def calcular_tamanho(vetor):
    return math.sqrt(vetor[0]**2 + vetor[1]**2 + vetor[2]**2)

# Função para normalizar um vetor
def normalizar_vetor(vetor):
    tamanho = calcular_tamanho(vetor)
    if tamanho == 0:
        return (0, 0, 0)  # Retorna vetor nulo se o tamanho for zero
    return (vetor[0] / tamanho, vetor[1] / tamanho, vetor[2] / tamanho)

# Função para somar dois vetores
def somar_vetores(vetor1, vetor2):
    return (vetor1[0] + vetor2[0], vetor1[1] + vetor2[1], vetor1[2] + vetor2[2])

# Função para subtrair dois vetores
def subtrair_vetores(vetor1, vetor2):
    return (vetor1[0] - vetor2[0], vetor1[1] - vetor2[1], vetor1[2] - vetor2[2])

# Função para multiplicar vetor por um escalar
def multiplicar_por_escalar(vetor, escalar):
    return (vetor[0] * escalar, vetor[1] * escalar, vetor[2] * escalar)

# Função para dividir o vetor por um escalar
def dividir_por_escalar(vetor, escalar):
    if escalar == 0:
        return (0, 0, 0)  # Evitar divisão por zero
    return (vetor[0] / escalar, vetor[1] / escalar, vetor[2] / escalar)

# Função para calcular o produto escalar de dois vetores
def produto_escalar(vetor1, vetor2):
    return vetor1[0] * vetor2[0] + vetor1[1] * vetor2[1] + vetor1[2] * vetor2[2]

# Função para arredondar os valores a 2 casas decimais
def arredondar(vetor):
    return tuple(round(comp, 2) for comp in vetor)

def main():
    # Leitura do vetor
    x = float(input("Digite o valor de x do vetor: "))
    y = float(input("Digite o valor de y do vetor: "))
    z = float(input("Digite o valor de z do vetor: "))
    vetor1 = (x, y, z)

    while True:
        # Exibir o menu
        print("\nEscolha uma opção:")
        print("a) Calcular o tamanho do vetor")
        print("b) Normalizar o vetor")
        print("c) Adicionar outro vetor")
        print("d) Subtrair outro vetor")
        print("e) Multiplicar o vetor por um escalar")
        print("f) Dividir o vetor por um escalar")
        print("g) Calcular o produto escalar com outro vetor")
        print("h) Sair")

        opcao = input("Digite sua opção: ").lower()

        if opcao == 'a':
            # Calcular o tamanho do vetor
            tamanho = calcular_tamanho(vetor1)
            print(f"O tamanho do vetor é: {round(tamanho, 2)}")

        elif opcao == 'b':
            # Normalizar o vetor
            vetor_normalizado = normalizar_vetor(vetor1)

            # Verificar se o vetor normalizado não é o vetor nulo
            if vetor_normalizado == (0, 0, 0):
                print("Não é possível normalizar o vetor, pois o vetor é nulo.")
            else:
                vetor_normalizado_arredondado = arredondar(vetor_normalizado)
                print(f"O vetor normalizado é: {vetor_normalizado_arredondado}")

        elif opcao == 'c':
            # Adicionar outro vetor
            x2 = float(input("Digite o valor de x do novo vetor: "))
            y2 = float(input("Digite o valor de y do novo vetor: "))
            z2 = float(input("Digite o valor de z do novo vetor: "))
            vetor2 = (x2, y2, z2)
            vetor_resultante = somar_vetores(vetor1, vetor2)
            print(f"A soma dos vetores é: {arredondar(vetor_resultante)}")

        elif opcao == 'd':
            # Subtrair outro vetor
            x2 = float(input("Digite o valor de x do novo vetor: "))
            y2 = float(input("Digite o valor de y do novo vetor: "))
            z2 = float(input("Digite o valor de z do novo vetor: "))
            vetor2 = (x2, y2, z2)
            vetor_resultante = subtrair_vetores(vetor1, vetor2)
            print(f"A subtração dos vetores é: {arredondar(vetor_resultante)}")

        elif opcao == 'e':
            # Multiplicar o vetor por um escalar
            escalar = float(input("Digite o valor do escalar: "))
            vetor_resultante = multiplicar_por_escalar(vetor1, escalar)
            print(f"O vetor resultante da multiplicação por escalar é: {arredondar(vetor_resultante)}")

        elif opcao == 'f':
            # Dividir o vetor por um escalar
            escalar = float(input("Digite o valor do escalar: "))
            vetor_resultante = dividir_por_escalar(vetor1, escalar)
            print(f"O vetor resultante da divisão por escalar é: {arredondar(vetor_resultante)}")

        elif opcao == 'g':
            # Calcular o produto escalar com outro vetor
            x2 = float(input("Digite o valor de x do novo vetor: "))
            y2 = float(input("Digite o valor de y do novo vetor: "))
            z2 = float(input("Digite o valor de z do novo vetor: "))
            vetor2 = (x2, y2, z2)
            resultado_produto = produto_escalar(vetor1, vetor2)
            print(f"O produto escalar dos vetores é: {round(resultado_produto, 2)}")

        elif opcao == 'h':
            # Sair
            print("Saindo...")
            break

        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()